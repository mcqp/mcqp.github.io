"use strict";(self.webpackChunkmcqp_github_io=self.webpackChunkmcqp_github_io||[]).push([[732],{2880:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"versions/v0.2.0","title":"v0.2.0 Latest","description":"Enhancement","source":"@site/docs/versions/v0.2.0.md","sourceDirName":"versions","slug":"/versions/v0.2.0","permalink":"/docs/versions/v0.2.0","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"v0.2.0 Latest"},"sidebar":"tutorialSidebar","previous":{"title":"Config Section","permalink":"/docs/mcqp_syntax/config"}}');var o=t(4848),s=t(8453);const i={title:"v0.2.0 Latest"},a=void 0,l={},h=[{value:"Enhancement",id:"enhancement",level:2},{value:"Change MCQP Parser",id:"change-mcqp-parser",level:3},{value:"Remove the Empty Line Between the Sections",id:"remove-the-empty-line-between-the-sections",level:3},{value:"Improve the Syntax Errors",id:"improve-the-syntax-errors",level:3},{value:"Add Message Markdown Errors",id:"add-message-markdown-errors",level:3},{value:"Fix",id:"fix",level:2},{value:"Fix Questions Length After the Counter",id:"fix-questions-length-after-the-counter",level:3},{value:"Fix Send Questions/Polls With One Option",id:"fix-send-questionspolls-with-one-option",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"enhancement",children:"Enhancement"}),"\n",(0,o.jsx)(n.h3,{id:"change-mcqp-parser",children:"Change MCQP Parser"}),"\n",(0,o.jsxs)(n.p,{children:["We changed the core MCQP parser to the ",(0,o.jsx)(n.a,{href:"https://pest.rs",children:"Pest Parser"}),", It helps us to use the\nparsing expression grammars (or PEG) to set and identify the MCQP grammar. This new change make\nthe syntax more controllable, for example in version 0.1.0 we must to add an empty line between\nthe section, now we solve this issue and you can work without it. In addition it will be easy to\nadd new syntax or modify it, like adding new config feature."]}),"\n",(0,o.jsx)(n.h3,{id:"remove-the-empty-line-between-the-sections",children:"Remove the Empty Line Between the Sections"}),"\n",(0,o.jsx)(n.p,{children:"We removed the empty line between sections, now you can work without them."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-mcq",metastring:"showLineNumbers",children:"q: question?\n    option one\n    option two *\np: Poll\n    option one\n    option two\n"})}),"\n",(0,o.jsx)(n.p,{children:"This will parse and checked without any errors."}),"\n",(0,o.jsx)(n.h3,{id:"improve-the-syntax-errors",children:"Improve the Syntax Errors"}),"\n",(0,o.jsxs)(n.p,{children:["We added new form of the syntax errors, now you have excellent errors and fix tips, for more\ninformation see ",(0,o.jsx)(n.a,{href:"/docs/reading_errors",children:"How to Read MCQP Errors"}),", simple example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-txt",children:"ERROR: The config feature missing the assignment operator.\n   --\x3e .\\test.mcq:3:12\n   |\n 3 |     counter\n   |             ^ expected an assignment operator, found None.\n\nFIX: Add the assignment operator followed by the value to assign the feature value.\n   |\n 3 |     counter  = <FEATURE-VALUE>\n   |             ++++++++++++++++++\n\n[ERROR] @parser - Can not parse the file!\n"})}),"\n",(0,o.jsx)(n.h3,{id:"add-message-markdown-errors",children:"Add Message Markdown Errors"}),"\n",(0,o.jsxs)(n.p,{children:["We added new config featrue to enable the message markdown errors, now you can write the markdown\nin the message block and the MCQP will parse it using the ",(0,o.jsx)(n.a,{href:"https://github.com/mcqp/telemark",children:"TeleMark Parser"}),",\nfor example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-mcq",metastring:"showLineNumbers",children:"// Enable the markdown errors.\nconfig:\n    md_err = true\n\n// This will throw an error at line 7\nm:(\nthis is invalid *bold\n):endm\n\n// Disable the markdown errors.\nconfig:\n    md_err = false\n\n// This will NOT throw an error.\nm:(\nthis is valid *bold\n):endm\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"fix",children:"Fix"}),"\n",(0,o.jsx)(n.h3,{id:"fix-questions-length-after-the-counter",children:"Fix Questions Length After the Counter"}),"\n",(0,o.jsxs)(n.p,{children:["In version 0.1.0, when you add a counter to a long question it will throw an error like this\n",(0,o.jsx)(n.code,{children:"Can not send the question"}),", now we check the length of the question after adding the counter."]}),"\n",(0,o.jsx)(n.h3,{id:"fix-send-questionspolls-with-one-option",children:"Fix Send Questions/Polls With One Option"}),"\n",(0,o.jsx)(n.p,{children:"The Telegram API will return an error if the poll or the question has only one option, in this\ncase we check if the question/poll has less then 2 options we throw an error, for example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-mcq",metastring:"showLineNumbers",children:"// This will throw an error\np: question\n    one option only\n\n// This will throw an error\nq: question\n    one option only *\n\n// This will throw an error\nmcp: question\n    one option only \n"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);